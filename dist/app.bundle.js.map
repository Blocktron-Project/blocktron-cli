{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./bin/blocktron-cli.js","webpack:///./src/index.js","webpack:///./config/blocktron.js","webpack:///./config/repoUrls.js","webpack:///external \"async\"","webpack:///external \"figlet\"","webpack:///./config/figlet.js","webpack:///external \"chalk\"","webpack:///external \"replace-in-file\"","webpack:///external \"child_process\""],"names":["log","message","level","console","chalk","white","blue","green","yellow","bold","red","isWindows","test","process","platform","run","script","Promise","resolve","reject","error","stdout","stderr","_BtConfig","name","figletConfig","err","data","version","argv","URL_SCHEMA","blocktronNode","blocktronExplorer","font","horizontalLayout","verticalLayout"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * import blocktron-cli\r\n */\r\nimport '../src';","/**\r\n * Blocktron CLI\r\n * A CLI tool to generate a blocktron instance.\r\n * Written by: Sandeep Vattapparambil\r\n * Email: sandeepv68@gmail.com\r\n * Website: www.sandeepv.in\r\n */\r\n\r\n/**\r\n * Use strict mode\r\n */\r\n'use strict';\r\n\r\nimport _BtConfig from '../config/blocktron';\r\nimport URL_SCHEMA from '../config/repoUrls';\r\n\r\n/**\r\n * async - utilities library for async operations\r\n */\r\nimport async from 'async';\r\n\r\n/**\r\n * Figlet - render ASCII graphics in terminal\r\n */\r\nimport figlet from 'figlet';\r\n\r\n/**\r\n * Figlet configuration\r\n */\r\nimport figletConfig from '../config/figlet';\r\n\r\n/**\r\n * Chalk - colorful terminal logs\r\n */\r\nimport chalk from 'chalk';\r\n\r\n/**\r\n * Replace-in-file - replace strings in files\r\n */\r\nimport replace from 'replace-in-file';\r\n\r\n/**\r\n * Exec command from child_process\r\n * Function to Spawns a shell then executes the command within that shell, buffering any generated output. \r\n * The command string passed to the exec function is processed directly by the shell and special \r\n * characters (vary based on shell) need to be dealt with accordingly.\r\n * Note: Never pass unsanitized user input to this function. \r\n * Any input containing shell metacharacters may be used to trigger arbitrary command execution.\r\n */\r\nimport {\r\n  exec\r\n} from 'child_process';\r\n\r\n/**\r\n * A helper function to augment console.log with chalk\r\n * @name log\r\n * @param {String} message - The message string\r\n * @param {String} level - The type of message\r\n */\r\nconst log = (message = '', level = '') => {\r\n  switch (level) {\r\n    case 'default':\r\n      console.log(chalk.white(message));\r\n      break;\r\n    case 'info':\r\n      console.log(chalk.blue(message));\r\n      break;\r\n    case 'success':\r\n      console.log(chalk.green(message));\r\n      break;\r\n    case 'warn':\r\n      console.log(chalk.yellow.bold(message));\r\n      break;\r\n    case 'error':\r\n      console.log(chalk.red.bold(message));\r\n      break;\r\n    default:\r\n      console.log(message);\r\n  }\r\n  return;\r\n};\r\n\r\n/**\r\n * @name isWindows\r\n * Helper function to check the current platform for Windows/Unix-ish.\r\n * @returns {Boolean} - Returns true if Windows, else false.\r\n */\r\nconst isWindows = () => {\r\n  if (/^win/i.test(process.platform)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * @name run\r\n * A Promise factory to execute an arbitrary shell command.\r\n * @param {String} script - The arbitrary shell command to execute.\r\n * @returns {<Promise>} - The promise object containing the stdout/stderr. \r\n */\r\nconst run = (script) => {\r\n  return new Promise((resolve, reject) => {\r\n    /**\r\n     * If a callback function is provided, it is called with the arguments (error, stdout, stderr). \r\n     * On success, error will be null. On error, error will be an instance of Error. \r\n     * The error.code property will be the exit code of the child process while error.signal \r\n     * will be set to the signal that terminated the process. \r\n     * Any exit code other than 0 is considered to be an error.\r\n     * The stdout and stderr arguments passed to the callback will contain the stdout and stderr \r\n     * output of the child process. By default, Node.js will decode the output as UTF-8 and pass \r\n     * strings to the callback. The encoding option can be used to specify the character encoding \r\n     * used to decode the stdout and stderr output. If encoding is 'buffer', or an unrecognized \r\n     * character encoding, Buffer objects will be passed to the callback instead.\r\n     */\r\n    exec(script, (error, stdout, stderr) => {\r\n      if (stderr) {\r\n        //reject promise with error\r\n        reject(stderr);\r\n      } else {\r\n        //resolve promise with success\r\n        resolve(stdout);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Bootstrap the cli after rendering the logo\r\n */\r\nfiglet(_BtConfig.name, figletConfig, (err, data) => {\r\n  if (err) {\r\n    log('logo rendering failed!: ' + err, 'error');\r\n  }\r\n\r\n  /**\r\n   * render the logo in bold yellow and version in blue\r\n   */\r\n  log(data, 'warn');\r\n  log(`v${_BtConfig.version}`, 'info');\r\n\r\n  if (process.argv[2]) {\r\n\r\n  } else {\r\n    log('\\nUsage:', 'info');\r\n    log('blocktron [options]', 'info');\r\n    log('\\nOptions:', 'info');\r\n    log('     -h  --help              show cli help', 'info');\r\n    log('     -v  --version           get cli version', 'info');\r\n    log('     .                       generate a new blocktron-node instance in the current directory', 'info');\r\n    log('     <project-name>          generate a new blocktron-node instance with the project name passed in', 'info');\r\n\r\n  }\r\n});","/**\r\n * Application configuration object\r\n */\r\nconst _BtConfig = {\r\n    name: 'Blocktron  cli',\r\n    version: '1.0.0'\r\n};\r\n\r\nexport default _BtConfig;","const URL_SCHEMA = {\r\n    blocktronNode: 'https://github.com/Blocktron-Project/blocktron-explorer.git',\r\n    blocktronExplorer: 'https://github.com/Blocktron-Project/blocktron-node.git'\r\n};\r\n\r\nexport default URL_SCHEMA;","module.exports = require(\"async\");","module.exports = require(\"figlet\");","/**\r\n * Figlet configuration object\r\n * @see {@link https://www.npmjs.com/package/figlet#font-options | Figlet-NPM}\r\n */\r\nconst figletConfig = {\r\n    font: 'Big',\r\n    horizontalLayout: 'fitted',\r\n    verticalLayout: 'default'\r\n};\r\n\r\nexport default figletConfig;","module.exports = require(\"chalk\");","module.exports = require(\"replace-in-file\");","module.exports = require(\"child_process\");"],"sourceRoot":""}